{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PCD DELL\\\\Desktop\\\\Connexion_google_facebook\\\\Front\\\\src\\\\pages\\\\homepage\\\\componants\\\\MapOfGoogle.js\",\n  _s = $RefreshSig$();\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport styles from \"./MapOfGoogle.module.scss\";\nimport { touristPlace } from \"../../../apis/mapOfGoogle\";\nimport ReactGoogleAutocomplete from \"react-google-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapOfGoogle = () => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const searchNearbyPlaces = async location => {\n    try {\n      const data = await touristPlace(location);\n      console.log(data);\n      setPlaces(data.results);\n    } catch (error) {\n      console.error(\"Error searching for places:\", error);\n    }\n  };\n\n  //fonction permettant de géolocalisé l'utilisateur grâce à son navigateur \n  const getUserLocation = () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          resolve({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          });\n        }, error => {\n          reject(error);\n        });\n      } else {\n        reject(new Error(\"Geolocation is not supported by this browser.\"));\n      }\n    });\n  };\n  const handlePlaceSelect = place => {\n    const location = {\n      lat: place.geometry.location.lat(),\n      lng: place.geometry.location.lng()\n    };\n    setUserLocation(location);\n    searchNearbyPlaces(location);\n  };\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyDpSrQ5Ey93gZgzhAWp0AlGAa351IUkUOI\"\n  });\n  useEffect(() => {\n    if (isLoaded) {\n      getUserLocation().then(location => {\n        setUserLocation(location);\n        searchNearbyPlaces(location);\n      }).catch(error => {\n        console.error(\"Error getting user location:\", error);\n      });\n    }\n  }, [isLoaded]);\n\n  /** @type {*image svg pointer} */\n  const customMarker = {\n    path: \"M29.395,0H17.636c-3.117,0-5.643,3.467-5.643,6.584v34.804c0,3.116,2.526,5.644,5.643,5.644h11.759   c3.116,0,5.644-2.527,5.644-5.644V6.584C35.037,3.467,32.511,0,29.395,0z M34.05,14.188v11.665l-2.729,0.351v-4.806L34.05,14.188z    M32.618,10.773c-1.016,3.9-2.219,8.51-2.219,8.51H16.631l-2.222-8.51C14.41,10.773,23.293,7.755,32.618,10.773z M15.741,21.713   v4.492l-2.73-0.349V14.502L15.741,21.713z M13.011,37.938V27.579l2.73,0.343v8.196L13.011,37.938z M14.568,40.882l2.218-3.336   h13.771l2.219,3.336H14.568z M31.321,35.805v-7.872l2.729-0.355v10.048L31.321,35.805\",\n    fillColor: \"red\",\n    fillOpacity: 2,\n    strokeWeight: 1,\n    rotation: 0,\n    scale: 1\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.app}`,\n    children: !isLoaded ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerClassName: `${styles.mapContainer}`,\n      center: userLocation,\n      zoom: 12,\n      children: [/*#__PURE__*/_jsxDEV(ReactGoogleAutocomplete, {\n        apiKey: \"AIzaSyDpSrQ5Ey93gZgzhAWp0AlGAa351IUkUOI\",\n        onPlaceSelected: place => {\n          handlePlaceSelect(place);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 1\n      }, this), places.map(place => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: place.geometry.location.lat,\n          lng: place.geometry.location.lng\n        },\n        icon: customMarker\n      }, place.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(MapOfGoogle, \"/Gh3hOxGCNKFLHKFvugTmP+gvu4=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapOfGoogle;\nexport default MapOfGoogle;\nvar _c;\n$RefreshReg$(_c, \"MapOfGoogle\");","map":{"version":3,"names":["GoogleMap","Marker","useLoadScript","useEffect","useMemo","useState","styles","touristPlace","ReactGoogleAutocomplete","jsxDEV","_jsxDEV","MapOfGoogle","_s","userLocation","setUserLocation","places","setPlaces","searchNearbyPlaces","location","data","console","log","results","error","getUserLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","Error","handlePlaceSelect","place","geometry","isLoaded","googleMapsApiKey","then","catch","customMarker","path","fillColor","fillOpacity","strokeWeight","rotation","scale","className","app","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerClassName","mapContainer","center","zoom","apiKey","onPlaceSelected","map","icon","id","_c","$RefreshReg$"],"sources":["C:/Users/PCD DELL/Desktop/Connexion_google_facebook/Front/src/pages/homepage/componants/MapOfGoogle.js"],"sourcesContent":["import { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport styles from \"./MapOfGoogle.module.scss\";\r\nimport { touristPlace } from \"../../../apis/mapOfGoogle\";\r\nimport ReactGoogleAutocomplete from \"react-google-autocomplete\";\r\n\r\nconst MapOfGoogle = () => {\r\n\r\n\r\n\r\n\r\nconst [userLocation, setUserLocation] = useState(null);\r\n  const [places, setPlaces] = useState([]);\r\n\r\n  const searchNearbyPlaces = async (location) => {\r\n    try {\r\n      const data = await touristPlace(location);\r\n      console.log(data);\r\n      setPlaces(data.results);\r\n    } catch (error) {\r\n      console.error(\"Error searching for places:\", error);\r\n    }\r\n  };\r\n\r\n  //fonction permettant de géolocalisé l'utilisateur grâce à son navigateur \r\n  const getUserLocation = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            resolve({\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude,\r\n            });\r\n          },\r\n          (error) => {\r\n            reject(error);\r\n          }\r\n        );\r\n      } else {\r\n        reject(new Error(\"Geolocation is not supported by this browser.\"));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlePlaceSelect = (place) => {\r\n    const location = {\r\n      lat: place.geometry.location.lat(),\r\n      lng: place.geometry.location.lng(),\r\n    };\r\n    setUserLocation(location);\r\n    searchNearbyPlaces(location);\r\n  };\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyDpSrQ5Ey93gZgzhAWp0AlGAa351IUkUOI\",\r\n  });\r\n\r\nuseEffect(() => {\r\n  if (isLoaded) {\r\n    getUserLocation()\r\n      .then((location) => {\r\n        setUserLocation(location);\r\n        searchNearbyPlaces(location);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error getting user location:\", error);\r\n      });\r\n  }\r\n}, [isLoaded]);\r\n\r\n  \r\n\r\n  /** @type {*image svg pointer} */\r\n  const customMarker = {\r\n    path: \"M29.395,0H17.636c-3.117,0-5.643,3.467-5.643,6.584v34.804c0,3.116,2.526,5.644,5.643,5.644h11.759   c3.116,0,5.644-2.527,5.644-5.644V6.584C35.037,3.467,32.511,0,29.395,0z M34.05,14.188v11.665l-2.729,0.351v-4.806L34.05,14.188z    M32.618,10.773c-1.016,3.9-2.219,8.51-2.219,8.51H16.631l-2.222-8.51C14.41,10.773,23.293,7.755,32.618,10.773z M15.741,21.713   v4.492l-2.73-0.349V14.502L15.741,21.713z M13.011,37.938V27.579l2.73,0.343v8.196L13.011,37.938z M14.568,40.882l2.218-3.336   h13.771l2.219,3.336H14.568z M31.321,35.805v-7.872l2.729-0.355v10.048L31.321,35.805\",\r\n    fillColor: \"red\",\r\n    fillOpacity: 2,\r\n    strokeWeight: 1,\r\n    rotation: 0,\r\n    scale: 1,\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.app}`}>\r\n      {!isLoaded ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <GoogleMap\r\n          mapContainerClassName={`${styles.mapContainer}`}\r\n          center={userLocation}\r\n          zoom={12}\r\n        >\r\n\r\n<ReactGoogleAutocomplete\r\n          apiKey=\"AIzaSyDpSrQ5Ey93gZgzhAWp0AlGAa351IUkUOI\"\r\n          onPlaceSelected={(place) => {\r\n            handlePlaceSelect(place);\r\n          }}\r\n        />\r\n\r\n          {places.map((place) => (\r\n            <Marker\r\n              key={place.id}\r\n              position={{\r\n                lat: place.geometry.location.lat,\r\n                lng: place.geometry.location.lng,\r\n              }}\r\n              icon={customMarker}\r\n            />\r\n          ))}\r\n        </GoogleMap>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapOfGoogle;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}