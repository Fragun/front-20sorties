{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PCD DELL\\\\Desktop\\\\CDA\\\\Connexion_google_facebook\\\\Front\\\\src\\\\components\\\\Provider\\\\AuthProvider.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { signin as login } from \"../../apis/auth\";\nimport { signout as logout } from \"../../apis/auth\";\nimport { AuthContext } from \"../../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const initialUser = useLoaderData();\n  const [user, setUser] = useState(initialUser);\n  const [userGoogle, setUserGoogle] = useState({});\n  const [userFacebook, setUserFacebook] = useState({});\n  // console.log(userFacebook);\n  // console.log(userGoogle);\n  // console.log(user);\n\n  useEffect(() => {\n    /** @type {*} \r\n     * exécuté une fois, lors du montage initial du composant. \r\n     * Il récupère les données de l'utilisateur Google à partir du stockage local. \r\n     * Si des données sont présentes, elles sont analysées en tant qu'objet JSON à l'aide de JSON.parse() \r\n     * puis l'état userGoogle est mis à jour avec ces données.\r\n    */\n    const userGoogleData = localStorage.getItem(\"userGoogle\");\n    if (userGoogleData) {\n      const parsedData = JSON.parse(userGoogleData);\n      setUserGoogle(parsedData);\n    }\n  }, []);\n  async function signInFacebook(response) {\n    setUserFacebook(response);\n  }\n  async function signin(credentials) {\n    const newUser = await login(credentials);\n    setUser(newUser);\n  }\n  async function signout() {\n    await logout();\n    setUser(null);\n  }\n  async function signoutGoogle() {\n    localStorage.removeItem(\"userGoogle\"); //permet d'enlever le token google\n    setUserGoogle({});\n  }\n  async function signoutFacebook() {\n    localStorage.removeItem(\"fblst_6447709785249838\");\n    sessionStorage.removeItem(\"fbssls_6447709785249838\");\n    setUserFacebook({});\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      userGoogle,\n      user,\n      signin,\n      signout,\n      signoutGoogle,\n      userFacebook,\n      signoutFacebook,\n      signInFacebook\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_s(AuthProvider, \"df7AC5y48v4XpblRjgLVOkAp+IA=\", false, function () {\n  return [useLoaderData];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useEffect","useState","useLoaderData","signin","login","signout","logout","AuthContext","jsxDEV","_jsxDEV","AuthProvider","_ref","_s","children","initialUser","user","setUser","userGoogle","setUserGoogle","userFacebook","setUserFacebook","userGoogleData","localStorage","getItem","parsedData","JSON","parse","signInFacebook","response","credentials","newUser","signoutGoogle","removeItem","signoutFacebook","sessionStorage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PCD DELL/Desktop/CDA/Connexion_google_facebook/Front/src/components/Provider/AuthProvider.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\nimport { signin as login } from \"../../apis/auth\";\r\nimport { signout as logout } from \"../../apis/auth\";\r\nimport { AuthContext } from \"../../context\";\r\n\r\nexport default function AuthProvider({ children }) {\r\n  const initialUser = useLoaderData();\r\n  const [user, setUser] = useState(initialUser);\r\n  \r\n  const [userGoogle, setUserGoogle] = useState({});\r\n  const [userFacebook, setUserFacebook] = useState({});\r\n  // console.log(userFacebook);\r\n  // console.log(userGoogle);\r\n  // console.log(user);\r\n\r\n  useEffect(() => {\r\n    /** @type {*} \r\n     * exécuté une fois, lors du montage initial du composant. \r\n     * Il récupère les données de l'utilisateur Google à partir du stockage local. \r\n     * Si des données sont présentes, elles sont analysées en tant qu'objet JSON à l'aide de JSON.parse() \r\n     * puis l'état userGoogle est mis à jour avec ces données.\r\n    */\r\n    const userGoogleData = localStorage.getItem(\"userGoogle\");\r\n    if (userGoogleData) {\r\n      const parsedData = JSON.parse(userGoogleData);\r\n      setUserGoogle(parsedData);\r\n    }\r\n  }, []);\r\n\r\n  async function signInFacebook(response) {\r\n    setUserFacebook(response)\r\n  }\r\n\r\n  async function signin(credentials) {\r\n    const newUser = await login(credentials);\r\n    setUser(newUser);\r\n  }\r\n\r\n  async function signout() {\r\n    await logout();\r\n    setUser(null);\r\n  }\r\n\r\n  async function signoutGoogle() {\r\n    localStorage.removeItem(\"userGoogle\"); //permet d'enlever le token google\r\n    setUserGoogle({});\r\n  }\r\n\r\n  async function signoutFacebook() {\r\n    localStorage.removeItem(\"fblst_6447709785249838\");\r\n    sessionStorage.removeItem(\"fbssls_6447709785249838\");\r\n    setUserFacebook({});\r\n  }\r\n\r\n  return (\r\n\r\n      <AuthContext.Provider\r\n        value={{\r\n          userGoogle,\r\n          user,\r\n          signin,\r\n          signout,\r\n          signoutGoogle,\r\n          userFacebook,\r\n          signoutFacebook,\r\n          signInFacebook\r\n        }}\r\n      >\r\n        {children}\r\n      </AuthContext.Provider>\r\n\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,MAAM,IAAIC,KAAK,QAAQ,iBAAiB;AACjD,SAASC,OAAO,IAAIC,MAAM,QAAQ,iBAAiB;AACnD,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC/C,MAAMG,WAAW,GAAGZ,aAAa,CAAC,CAAC;EACnC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACa,WAAW,CAAC;EAE7C,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACd;AACJ;AACA;AACA;AACA;AACA;IACI,MAAMqB,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACzD,IAAIF,cAAc,EAAE;MAClB,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC;MAC7CH,aAAa,CAACM,UAAU,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeG,cAAcA,CAACC,QAAQ,EAAE;IACtCR,eAAe,CAACQ,QAAQ,CAAC;EAC3B;EAEA,eAAezB,MAAMA,CAAC0B,WAAW,EAAE;IACjC,MAAMC,OAAO,GAAG,MAAM1B,KAAK,CAACyB,WAAW,CAAC;IACxCb,OAAO,CAACc,OAAO,CAAC;EAClB;EAEA,eAAezB,OAAOA,CAAA,EAAG;IACvB,MAAMC,MAAM,CAAC,CAAC;IACdU,OAAO,CAAC,IAAI,CAAC;EACf;EAEA,eAAee,aAAaA,CAAA,EAAG;IAC7BT,YAAY,CAACU,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;IACvCd,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB;EAEA,eAAee,eAAeA,CAAA,EAAG;IAC/BX,YAAY,CAACU,UAAU,CAAC,wBAAwB,CAAC;IACjDE,cAAc,CAACF,UAAU,CAAC,yBAAyB,CAAC;IACpDZ,eAAe,CAAC,CAAC,CAAC,CAAC;EACrB;EAEA,oBAEIX,OAAA,CAACF,WAAW,CAAC4B,QAAQ;IACnBC,KAAK,EAAE;MACLnB,UAAU;MACVF,IAAI;MACJZ,MAAM;MACNE,OAAO;MACP0B,aAAa;MACbZ,YAAY;MACZc,eAAe;MACfN;IACF,CAAE;IAAAd,QAAA,EAEDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAG7B;AAAC5B,EAAA,CAnEuBF,YAAY;EAAA,QACdR,aAAa;AAAA;AAAAuC,EAAA,GADX/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}