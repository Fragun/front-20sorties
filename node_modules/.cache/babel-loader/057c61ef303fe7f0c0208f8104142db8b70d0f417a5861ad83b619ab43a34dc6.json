{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PCD DELL\\\\Desktop\\\\CDA\\\\Connexion_google_facebook\\\\Front\\\\src\\\\components\\\\TruncatedText\\\\TruncatedText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_WORDS = 25;\n\n/**\r\n * permet de tronquer un texte supérieur à MAX_WORDS\r\n *\r\n * @export\r\n * @param {*} { text }\r\n * @return\r\n */\nexport default function TruncatedText({\n  text\n}) {\n  _s();\n  const [showFullText, setShowFullText] = useState(false);\n  const toggleText = () => {\n    setShowFullText(!showFullText);\n  };\n  const truncateText = text => {\n    const words = text.split(\" \");\n    if (words.length > MAX_WORDS) {\n      const truncatedWords = words.slice(0, MAX_WORDS);\n      return truncatedWords.join(\" \");\n    }\n    return text;\n  };\n  const displayText = showFullText ? text : truncateText(text);\n  const hasMoreWords = text.split(\" \").length > MAX_WORDS;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggleText,\n      className: \"text-center\",\n      children: [displayText, !showFullText && hasMoreWords && /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: toggleText,\n        className: \"btn-lightt\",\n        children: [\"...\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Lire la suite ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(TruncatedText, \"1ujlc7GYzWS3Ojiif5+NKdWm4lQ=\");\n_c = TruncatedText;\nvar _c;\n$RefreshReg$(_c, \"TruncatedText\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MAX_WORDS","TruncatedText","text","_s","showFullText","setShowFullText","toggleText","truncateText","words","split","length","truncatedWords","slice","join","displayText","hasMoreWords","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PCD DELL/Desktop/CDA/Connexion_google_facebook/Front/src/components/TruncatedText/TruncatedText.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst MAX_WORDS = 25;\r\n\r\n/**\r\n * permet de tronquer un texte supérieur à MAX_WORDS\r\n *\r\n * @export\r\n * @param {*} { text }\r\n * @return\r\n */\r\nexport default function TruncatedText({ text }) {\r\n  const [showFullText, setShowFullText] = useState(false);\r\n\r\n  const toggleText = () => {\r\n    setShowFullText(!showFullText);\r\n  };\r\n\r\n  const truncateText = (text) => {\r\n    const words = text.split(\" \");\r\n    if (words.length > MAX_WORDS) {\r\n      const truncatedWords = words.slice(0, MAX_WORDS);\r\n      return truncatedWords.join(\" \");\r\n    }\r\n    return text;\r\n  };\r\n\r\n  const displayText = showFullText ? text : truncateText(text);\r\n  const hasMoreWords = text.split(\" \").length > MAX_WORDS;\r\n\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <div onClick={toggleText} className=\"text-center\">\r\n        {displayText}\r\n        {!showFullText && hasMoreWords && (\r\n            <i onClick={toggleText} className=\"btn-lightt\">\r\n              ...\r\n              <span>Lire la suite ?</span>\r\n            </i>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAG,EAAE;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,aAAaA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBD,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMG,YAAY,GAAIL,IAAI,IAAK;IAC7B,MAAMM,KAAK,GAAGN,IAAI,CAACO,KAAK,CAAC,GAAG,CAAC;IAC7B,IAAID,KAAK,CAACE,MAAM,GAAGV,SAAS,EAAE;MAC5B,MAAMW,cAAc,GAAGH,KAAK,CAACI,KAAK,CAAC,CAAC,EAAEZ,SAAS,CAAC;MAChD,OAAOW,cAAc,CAACE,IAAI,CAAC,GAAG,CAAC;IACjC;IACA,OAAOX,IAAI;EACb,CAAC;EAED,MAAMY,WAAW,GAAGV,YAAY,GAAGF,IAAI,GAAGK,YAAY,CAACL,IAAI,CAAC;EAC5D,MAAMa,YAAY,GAAGb,IAAI,CAACO,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,GAAGV,SAAS;EAEvD,oBACED,OAAA;IAAKiB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBlB,OAAA;MAAKmB,OAAO,EAAEZ,UAAW;MAACU,SAAS,EAAC,aAAa;MAAAC,QAAA,GAC9CH,WAAW,EACX,CAACV,YAAY,IAAIW,YAAY,iBAC1BhB,OAAA;QAAGmB,OAAO,EAAEZ,UAAW;QAACU,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,KAE7C,eAAAlB,OAAA;UAAAkB,QAAA,EAAM;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CAhCuBF,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}