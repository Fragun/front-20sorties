{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PCD DELL\\\\Desktop\\\\Connexion_google_facebook\\\\Front\\\\src\\\\pages\\\\homepage\\\\componants\\\\MapOfGoogle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { GoogleMap, LoadScript, MarkerClusterer } from \"@react-google-maps/api\";\nimport { getUserLocation, searchNearbyPlace } from \"../../../apis/mapOfGoogle\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100vh\"\n};\nconst options = {\n  imagePath: \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\"\n};\nconst MapOfGoogle = () => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const placeRefs = useRef([]);\n  useEffect(() => {\n    getUserLocation().then(location => {\n      setUserLocation(location);\n      searchNearbyPlace(location).then(data => setPlaces(data)).catch(error => console.error(\"Error searching for places:\", error));\n    }).catch(error => console.error(\"Error getting user location:\", error));\n  }, []);\n  const handleMarkerClick = place => {\n    setSelectedPlace(place);\n    const index = places.findIndex(p => p.place_id === place.place_id);\n    const element = placeRefs.current[index];\n    if (element) {\n      element.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    children: !userLocation ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: userLocation,\n      zoom: 12,\n      children: /*#__PURE__*/_jsxDEV(MarkerClusterer, {\n        options: options,\n        children: clusterer => places.map(place => place.details.rating > 3.5 && /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: place.geometry.location.lat,\n            lng: place.geometry.location.lng\n          },\n          clusterer: clusterer,\n          onClick: () => handleMarkerClick(place)\n        }, place.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(MapOfGoogle, \"Xi0NflQRch8e8Oa0rIKHHWdU3uQ=\");\n_c = MapOfGoogle;\nexport default MapOfGoogle;\nvar _c;\n$RefreshReg$(_c, \"MapOfGoogle\");","map":{"version":3,"names":["React","useEffect","useRef","useState","GoogleMap","LoadScript","MarkerClusterer","getUserLocation","searchNearbyPlace","Loading","jsxDEV","_jsxDEV","containerStyle","width","height","options","imagePath","MapOfGoogle","_s","userLocation","setUserLocation","places","setPlaces","selectedPlace","setSelectedPlace","placeRefs","then","location","data","catch","error","console","handleMarkerClick","place","index","findIndex","p","place_id","element","current","scrollIntoView","behavior","googleMapsApiKey","process","env","REACT_APP_GOOGLE_API_KEY","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","center","zoom","clusterer","map","details","rating","Marker","position","lat","geometry","lng","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/PCD DELL/Desktop/Connexion_google_facebook/Front/src/pages/homepage/componants/MapOfGoogle.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { GoogleMap, LoadScript, MarkerClusterer } from \"@react-google-maps/api\";\r\nimport { getUserLocation, searchNearbyPlace } from \"../../../apis/mapOfGoogle\";\r\nimport Loading from \"../../../components/Loading/Loading\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"100vh\",\r\n};\r\n\r\nconst options = {\r\n  imagePath: \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\",\r\n};\r\n\r\nconst MapOfGoogle = () => {\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [places, setPlaces] = useState([]);\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n  const placeRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    getUserLocation()\r\n      .then((location) => {\r\n        setUserLocation(location);\r\n        searchNearbyPlace(location)\r\n          .then((data) => setPlaces(data))\r\n          .catch((error) => console.error(\"Error searching for places:\", error));\r\n      })\r\n      .catch((error) => console.error(\"Error getting user location:\", error));\r\n  }, []);\r\n\r\n  const handleMarkerClick = (place) => {\r\n    setSelectedPlace(place);\r\n    const index = places.findIndex((p) => p.place_id === place.place_id);\r\n    const element = placeRefs.current[index];\r\n    if (element) {\r\n      element.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_API_KEY}>\r\n      {!userLocation ? (\r\n        <Loading />\r\n      ) : (\r\n        <GoogleMap mapContainerStyle={containerStyle} center={userLocation} zoom={12}>\r\n          <MarkerClusterer options={options}>\r\n            {(clusterer) =>\r\n              places.map(\r\n                (place) =>\r\n                  place.details.rating > 3.5 && (\r\n                    <Marker\r\n                      key={place.id}\r\n                      position={{\r\n                        lat: place.geometry.location.lat,\r\n                        lng: place.geometry.location.lng,\r\n                      }}\r\n                      clusterer={clusterer}\r\n                      onClick={() => handleMarkerClick(place)}\r\n                    />\r\n                  )\r\n              )\r\n            }\r\n          </MarkerClusterer>\r\n        </GoogleMap>\r\n      )}\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default MapOfGoogle;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}